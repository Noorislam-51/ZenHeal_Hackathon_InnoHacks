<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add New Patient - Village Health Portal</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
      background-color: #f8f9fa;
    }

    .sidebar {
      min-height: 100vh;
      background-color: #ffffff;
      padding: 1.5rem 0;
      border-right: 1px solid #dee2e6;
    }

    .sidebar .nav-link {
      color: #495057;
      padding: 0.75rem 1.5rem;
      margin: 0.25rem 0;
    }

    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
      background-color: #f8f9fa;
    }

    .logo {
      padding: 0 1.5rem 1.5rem;
    }

    .logo-icon {
      width: 40px;
      height: 40px;
      background-color: #17a2b8;
      border-radius: 8px;
    }

    .main-content {
      background-color: #f8f9fa;
      min-height: 100vh;
    }

    .form-card {
      background-color: white;
      border-radius: 8px;
      padding: 2rem;
      max-width: 800px;
      margin: 2rem auto;
    }

    .upload-btn,
    .record-btn {
      border: 2px dashed #dee2e6;
      background-color: #f8f9fa;
      padding: 2rem;
      border-radius: 8px;
      cursor: pointer;
      text-align: center;
    }

    .upload-btn:hover,
    .record-btn:hover {
      background-color: #e9ecef;
    }

    .btn-save {
      background-color: #17a2b8;
      color: white;
      padding: 0.75rem 2rem;
    }

    .btn-save:hover {
      background-color: #138496;
    }

    .btn-offline {
      background-color: #e9ecef;
      color: #495057;
      padding: 0.75rem 2rem;
    }

    .form-label {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .required {
      color: #dc3545;
    }
  </style>
</head>

<body>
  <div class="container-fluid">
    <div class="row">
      <%- include('../partials/Menubar') %>
        <%- include('../partials/TopmenuBar', { translateSnippet: translateSnippet }) %>



          <!-- Form -->
          <div class="form-card">
            <h4 class="mb-2">Patient Registration</h4>
            <p class="text-muted mb-4">Fill in the patient details to register them in the system</p>

            <form action="/patient/add_patient" method="POST" enctype="multipart/form-data">

              <!-- Full Name -->
              <div class="mb-4">
                <label class="form-label">Full Name <span class="required">*</span></label>
                <input type="text" name="fullName" class="form-control" placeholder="Enter patient's full name"
                  required>
              </div>

              <!-- Age and Gender -->
              <div class="row mb-4">
                <div class="col-md-6">
                  <label class="form-label">Age <span class="required">*</span></label>
                  <input type="number" name="age" class="form-control" placeholder="Enter age" required>
                </div>
                <div class="col-md-6">
                  <label class="form-label">Gender <span class="required">*</span></label>
                  <div class="mt-2">
                    <div class="form-check form-check-inline">
                      <input class="form-check-input" type="radio" name="gender" id="male" value="male" checked>
                      <label class="form-check-label" for="male">Male</label>
                    </div>
                    <div class="form-check form-check-inline">
                      <input class="form-check-input" type="radio" name="gender" id="female" value="female">
                      <label class="form-check-label" for="female">Female</label>
                    </div>
                    <div class="form-check form-check-inline">
                      <input class="form-check-input" type="radio" name="gender" id="other" value="other">
                      <label class="form-check-label" for="other">Other</label>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Village and Contact -->
              <div class="row mb-4">
                <div class="col-md-6">
                  <label class="form-label">Village <span class="required">*</span></label>
                  <input type="text" name="village" class="form-control" placeholder="Enter village name" required>
                </div>
                <div class="col-md-6">
                  <label class="form-label">Contact Number</label>
                  <input type="tel" name="contact" class="form-control" placeholder="Enter phone number">
                </div>
              </div>

              <!-- Symptoms -->
              <div class="mb-4">
                <label class="form-label">Symptoms</label>
                <textarea name="symptoms" class="form-control" rows="5"
                  placeholder="Describe patient's symptoms..."></textarea>
              </div>
              <!-- Problem Category -->
              <div class="mb-4">
                <label class="form-label">Problem Category <span class="required">*</span></label>
                <select name="category" id="categorySelect" class="form-select" required>
                  <option value="">Select a category</option>
                  <option value="General">General</option>
                  <option value="Fever">Fever</option>
                  <option value="Injury">Injury</option>
                  <option value="Eye">Eye</option>
                  <option value="Skin">Skin</option>
                  <option value="Maternal">Maternal</option>
                  <option value="Other">Other</option>
                </select>
              </div>

              <!-- Hidden textbox (shown only when "Other" is selected) -->
              <div class="mb-4" id="otherCategoryDiv" style="display: none;">
                <label class="form-label">Specify Other Problem</label>
                <input type="text" id="otherCategoryInput" name="otherCategory" class="form-control"
                  placeholder="Enter specific problem type">
              </div>


              <!-- Patient Photo Capture -->
              <!-- Patient Photo Capture -->
              <div class="mb-4">
                <label class="form-label d-block">Patient Photo</label>

                <div class="text-center">
                  <video id="cameraStream" autoplay playsinline
                    style="display:none; width: 100%; max-width: 300px; border-radius: 10px;"></video>
                  <canvas id="snapshotCanvas" style="display:none;"></canvas>
                  <img id="capturedImage" src="" alt="Captured Photo"
                    style="display:none; width:150px; height:150px; border-radius:10px; object-fit:cover;">
                </div>

                <div class="mt-3 d-flex justify-content-center flex-wrap gap-3">
                  <button type="button" id="openCameraBtn" class="btn btn-primary">
                    <i class="bi bi-camera-video"></i> Open Camera
                  </button>
                  <button type="button" id="takePhotoBtn" class="btn btn-success" style="display:none;">
                    <i class="bi bi-camera"></i> Capture
                  </button>
                  <button type="button" id="removePhotoBtn" class="btn btn-outline-danger" style="display:none;">
                    <i class="bi bi-trash3"></i> Remove
                  </button>

                  <!-- 🔹 New: Upload from system -->
                  <label for="uploadPhotoInput" class="btn btn-secondary mb-0">
                    <i class="bi bi-upload"></i> Select from System
                  </label>
                  <input type="file" id="uploadPhotoInput" name="photoFile" accept="image/*" style="display:none;">
                </div>

                <!-- Hidden input for camera capture (base64 data) -->
                <input type="hidden" id="photoData" name="photoData">
              </div>




              <!-- Action Buttons -->
              <div class="row">
                <div class="col-md-6">
                  <button type="submit" class="btn btn-save w-100">
                    <i class="bi bi-save me-2"></i> Save Patient
                  </button>
                </div>
                <div class="col-md-6">
                  <button type="button" class="btn btn-offline w-100">
                    <i class="bi bi-wifi-off me-2"></i> Save Offline
                  </button>
                </div>
              </div>

            </form>
          </div>

    </div>
  </div>
  </div>
  <script>
    // When category changes
    document.getElementById('categorySelect').addEventListener('change', function () {
      const selected = this.value;
      const otherDiv = document.getElementById('otherCategoryDiv');
      const otherInput = document.getElementById('otherCategoryInput');

      if (selected === 'Other') {
        otherDiv.style.display = 'block';
        otherInput.required = true;
      } else {
        otherDiv.style.display = 'none';
        otherInput.required = false;
        otherInput.value = '';
      }
    });
    const openCameraBtn = document.getElementById('openCameraBtn');
    const takePhotoBtn = document.getElementById('takePhotoBtn');
    const removePhotoBtn = document.getElementById('removePhotoBtn');
    const uploadPhotoInput = document.getElementById('uploadPhotoInput');
    const video = document.getElementById('cameraStream');
    const canvas = document.getElementById('snapshotCanvas');
    const capturedImage = document.getElementById('capturedImage');
    const photoDataInput = document.getElementById('photoData');
    let stream = null;

    // 🎥 Open camera stream
    openCameraBtn.addEventListener('click', async () => {
      try {
        stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
        video.style.display = 'block';
        takePhotoBtn.style.display = 'inline-block';
        openCameraBtn.style.display = 'none';
      } catch (err) {
        alert('❌ Unable to access camera. Please allow camera permission.');
        console.error(err);
      }
    });

    // 📸 Capture photo
    takePhotoBtn.addEventListener('click', () => {
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);

      const dataURL = canvas.toDataURL('image/png');
      capturedImage.src = dataURL;
      capturedImage.style.display = 'block';
      photoDataInput.value = dataURL;

      stream.getTracks().forEach(track => track.stop());
      video.style.display = 'none';
      takePhotoBtn.style.display = 'none';
      removePhotoBtn.style.display = 'inline-block';
    });

    // 🗑️ Remove photo
    removePhotoBtn.addEventListener('click', () => {
      capturedImage.src = '';
      capturedImage.style.display = 'none';
      photoDataInput.value = '';
      removePhotoBtn.style.display = 'none';
      openCameraBtn.style.display = 'inline-block';
      uploadPhotoInput.value = ''; // reset file
    });

    // 🖼️ Upload from system
    uploadPhotoInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          capturedImage.src = e.target.result;
          capturedImage.style.display = 'block';
          photoDataInput.value = e.target.result; // base64 encode
          removePhotoBtn.style.display = 'inline-block';
          openCameraBtn.style.display = 'inline-block';
          takePhotoBtn.style.display = 'none';
          if (stream) stream.getTracks().forEach(track => track.stop());
          video.style.display = 'none';
        };
        reader.readAsDataURL(file);
      }
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>